version: '3.9'

services:
  #  start Postgres, and ensure that data is stored to a mounted volume
  postgres:
    image: 'postgres:13.4'
    ports:
      - '5432:5432'
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: goravel
    networks:
      - postgres
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  #  start Redis, and ensure that data is stored to a mounted volume
  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    restart: unless-stopped
    volumes:
      - ./db-data/redis/:/data

  #  start MariaDB, and ensure that data is stored to a mounted volume
  mariadb:
    image: 'mariadb:10.6'
    ports:
      - '3306:3306'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: goravel
      MYSQL_USER: mariadb
      MYSQL_PASSWORD: password
    volumes:
      - ./db-data/mariadb:/docker-entrypoint-initdb.d
  # start pgadmin which is a postgres client
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./db-data/pgadmin/:/var/lib/pgadmin/
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - postgres
    restart: unless-stopped

  # For an easy test mailing server
  mailhog:
    image: 'mailhog/mailhog'
    ports:
      - '1025:1025'
      - '8025:8025'
    restart: unless-stopped

networks:
  postgres:
    driver: bridge
